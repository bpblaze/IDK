local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

-- Wait for character
repeat task.wait() until Player.Character
local Humanoid = Player.Character:WaitForChild("Humanoid")

-- Aimlock Settings
local Aimlock = {
    Enabled = false,
    Target = nil,
    Hotkey = Enum.KeyCode.F,
    LockPart = "Head", -- Now using Head since we're aiming
    MaxDistance = 1000,
    FOV = 30, -- Degrees field of view for aiming
    Notifications = true
}

-- Get player you're aiming at
local function GetTargetUnderCrosshair()
    local mousePos = UserInputService:GetMouseLocation()
    local viewportSize = Camera.ViewportSize
    local center = Vector2.new(viewportSize.X/2, viewportSize.Y/2)
    local closestPlayer, closestAngle = nil, math.rad(Aimlock.FOV)
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Player and player.Character then
            local targetPart = player.Character:FindFirstChild(Aimlock.LockPart)
            if targetPart then
                -- Calculate screen position
                local screenPos, onScreen = Camera:WorldToViewportPoint(targetPart.Position)
                
                if onScreen then
                    -- Calculate angle from crosshair
                    local pos2D = Vector2.new(screenPos.X, screenPos.Y)
                    local angle = math.acos((center - pos2D).Unit:Dot(Vector2.new(0, 1)))
                    
                    -- Check if within FOV and closest
                    if angle < closestAngle then
                        closestAngle = angle
                        closestPlayer = player
                    end
                end
            end
        end
    end
    
    return closestPlayer
end

-- Strong lock function
local function ApplyLock()
    if not Aimlock.Enabled or not Aimlock.Target then return end
    
    local targetPart = Aimlock.Target.Character:FindFirstChild(Aimlock.LockPart)
    if not targetPart then return end
    
    -- Force camera lock
    Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPart.Position)
    
    -- Disable mouse movement
    UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
    Humanoid.AutoRotate = false
end

-- Toggle system
UserInputService.InputBegan:Connect(function(input, processed)
    if input.KeyCode == Aimlock.Hotkey and not processed then
        Aimlock.Enabled = not Aimlock.Enabled
        
        if Aimlock.Enabled then
            Aimlock.Target = GetTargetUnderCrosshair()
            if Aimlock.Target then
                if Aimlock.Notifications then
                    game.StarterGui:SetCore("SendNotification", {
                        Title = "ðŸ”’ LOCKED ON TARGET",
                        Text = Aimlock.Target.Name,
                        Duration = 2
                    })
                end
            else
                Aimlock.Enabled = false
                if Aimlock.Notifications then
                    game.StarterGui:SetCore("SendNotification", {
                        Title = "NO TARGET IN SIGHT",
                        Text = "Aim at a player first",
                        Duration = 2
                    })
                end
            end
        else
            -- Release controls
            UserInputService.MouseBehavior = Enum.MouseBehavior.Default
            Humanoid.AutoRotate = true
        end
    end
end)

-- Main loop
RunService.RenderStepped:Connect(function()
    if Aimlock.Enabled then
        -- Refresh target if lost
        if not Aimlock.Target or not Aimlock.Target.Character then
            Aimlock.Target = GetTargetUnderCrosshair()
        end
        
        ApplyLock()
    end
end)

-- Simple UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = Player.PlayerGui

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Text = "AIMLOCK: INACTIVE (Press F)"
StatusLabel.Size = UDim2.new(0, 250, 0, 40)
StatusLabel.Position = UDim2.new(0.5, -125, 0, 10)
StatusLabel.AnchorPoint = Vector2.new(0.5, 0)
StatusLabel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
StatusLabel.BackgroundTransparency = 0.7
StatusLabel.TextColor3 = Color3.new(1, 1, 1)
StatusLabel.Font = Enum.Font.GothamBold
StatusLabel.TextSize = 14
StatusLabel.Parent = ScreenGui

-- Update UI
while true do
    if Aimlock.Enabled then
        StatusLabel.Text = "LOCKED: "..(Aimlock.Target and Aimlock.Target.Name or "SEARCHING...")
        StatusLabel.TextColor3 = Color3.new(0, 1, 0)
    else
        StatusLabel.Text = "AIMLOCK: INACTIVE (Press F)"
        StatusLabel.TextColor3 = Color3.new(1, 1, 1)
    end
    task.wait(0.1)
end
