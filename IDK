local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

-- Mobile detection
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Create the permanent UI (only once)
local function CreatePermanentUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PermanentAimlockUI"
    screenGui.ResetOnSpawn = false  -- This keeps it visible through respawns
    screenGui.Parent = Player:WaitForChild("PlayerGui")

    -- Main container frame
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 320, 0, 280)
    frame.Position = UDim2.new(0.5, -160, 0.5, -140)
    frame.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
    frame.BorderColor3 = Color3.fromRGB(30, 30, 30)
    frame.Active = true
    frame.Draggable = true
    frame.Parent = screenGui

    -- Top bar with gradient
    local topBar = Instance.new("Frame")
    topBar.Size = UDim2.new(1, 0, 0, 35)
    topBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    topBar.Parent = frame

    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 0, 120)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 0, 60))
    })
    gradient.Rotation = 90
    gradient.Parent = topBar

    -- Title and close button
    local title = Instance.new("TextLabel")
    title.Text = "AIM LOCK"
    title.Size = UDim2.new(1, 0, 1, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = Color3.new(1, 1, 1)
    title.Font = Enum.Font.GothamBold
    title.TextSize = 14
    title.Parent = topBar

    local closeBtn = Instance.new("TextButton")
    closeBtn.Text = "âœ•"
    closeBtn.Size = UDim2.new(0, 30, 0, 30)
    closeBtn.Position = UDim2.new(1, -30, 0, 0)
    closeBtn.BackgroundTransparency = 1
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.Font = Enum.Font.Gotham
    closeBtn.Parent = topBar

    -- Hotkey selector
    local hotkeyFrame = Instance.new("Frame")
    hotkeyFrame.Size = UDim2.new(0.9, 0, 0, 40)
    hotkeyFrame.Position = UDim2.new(0.05, 0, 0.2, 0)
    hotkeyFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    hotkeyFrame.Parent = frame

    local hotkeyLabel = Instance.new("TextLabel")
    hotkeyLabel.Text = "HOTKEY"
    hotkeyLabel.Size = UDim2.new(0.4, 0, 1, 0)
    hotkeyLabel.BackgroundTransparency = 1
    hotkeyLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
    hotkeyLabel.Font = Enum.Font.Gotham
    hotkeyLabel.TextXAlignment = Enum.TextXAlignment.Left
    hotkeyLabel.Parent = hotkeyFrame

    local hotkeyBtn = Instance.new("TextButton")
    hotkeyBtn.Text = isMobile and "[TAP BUTTON]" or "[F]"
    hotkeyBtn.Size = UDim2.new(0.5, 0, 0.8, 0)
    hotkeyBtn.Position = UDim2.new(0.5, 0, 0.1, 0)
    hotkeyBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    hotkeyBtn.TextColor3 = Color3.new(1, 1, 1)
    hotkeyBtn.Font = Enum.Font.GothamBold
    hotkeyBtn.Parent = hotkeyFrame

    -- Status display
    local statusFrame = Instance.new("Frame")
    statusFrame.Size = UDim2.new(0.9, 0, 0, 80)
    statusFrame.Position = UDim2.new(0.05, 0, 0.4, 0)
    statusFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    statusFrame.Parent = frame

    local statusLabel = Instance.new("TextLabel")
    statusLabel.Text = "STATUS: READY"
    statusLabel.Size = UDim2.new(1, 0, 0.4, 0)
    statusLabel.BackgroundTransparency = 1
    statusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.Parent = statusFrame

    local targetLabel = Instance.new("TextLabel")
    targetLabel.Text = "TARGET: NONE"
    targetLabel.Size = UDim2.new(1, 0, 0.4, 0)
    targetLabel.Position = UDim2.new(0, 0, 0.5, 0)
    targetLabel.BackgroundTransparency = 1
    targetLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    targetLabel.Font = Enum.Font.Gotham
    targetLabel.Parent = statusFrame

    -- Mobile lock button (floating)
    if isMobile then
        local mobileBtn = Instance.new("TextButton")
        mobileBtn.Name = "MobileLockButton"
        mobileBtn.Text = "ðŸ”’\nLOCK"
        mobileBtn.Size = UDim2.new(0, 80, 0, 80)
        mobileBtn.Position = UDim2.new(1, -90, 1, -90)
        mobileBtn.AnchorPoint = Vector2.new(1, 1)
        mobileBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        mobileBtn.TextColor3 = Color3.new(1, 1, 1)
        mobileBtn.Font = Enum.Font.GothamBold
        mobileBtn.TextSize = 14
        mobileBtn.ZIndex = 10
        mobileBtn.Parent = screenGui

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = mobileBtn
    end

    return {
        ScreenGui = screenGui,
        HotkeyButton = hotkeyBtn,
        StatusLabel = statusLabel,
        TargetLabel = targetLabel,
        MobileButton = isMobile and screenGui:FindFirstChild("MobileLockButton") or nil,
        CloseButton = closeBtn
    }
end

-- Initialize permanent UI
local UI = CreatePermanentUI()

-- Aimlock system
local Aimlock = {
    Enabled = false,
    Target = nil,
    Hotkey = isMobile and nil or Enum.KeyCode.F,
    LockPart = "Head",
    FOV = 35,
    Notifications = true
}

-- Character setup function
local function SetupCharacter()
    repeat task.wait() until Player.Character
    local humanoid = Player.Character:WaitForChild("Humanoid")
    
    -- Reset aimlock state on respawn
    if Aimlock.Enabled then
        Aimlock.Enabled = false
        UserInputService.MouseBehavior = Enum.MouseBehavior.Default
        humanoid.AutoRotate = true
        UI.StatusLabel.Text = "STATUS: READY"
        UI.TargetLabel.Text = "TARGET: NONE"
        if UI.MobileButton then
            UI.MobileButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        end
    end
end

-- Handle character respawns
Player.CharacterAdded:Connect(SetupCharacter)
SetupCharacter() -- Initial setup

-- Notification function
local function ShowNotification(message)
    if Aimlock.Notifications then
        game.StarterGui:SetCore("SendNotification", {
            Title = "AIMLOCK",
            Text = message,
            Duration = 2
        })
    end
end

-- Target finding function
local function GetTargetUnderCrosshair()
    local closestPlayer, closestAngle = nil, math.rad(Aimlock.FOV)
    local viewportSize = Camera.ViewportSize
    local center = Vector2.new(viewportSize.X/2, viewportSize.Y/2)
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Player and player.Character then
            local targetPart = player.Character:FindFirstChild(Aimlock.LockPart)
            if targetPart then
                local screenPos, onScreen = Camera:WorldToViewportPoint(targetPart.Position)
                
                if onScreen then
                    local pos2D = Vector2.new(screenPos.X, screenPos.Y)
                    local angle = math.acos((center - pos2D).Unit:Dot(Vector2.new(0, 1)))
                    
                    if angle < closestAngle then
                        closestAngle = angle
                        closestPlayer = player
                    end
                end
            end
        end
    end
    
    return closestPlayer
end

-- Toggle aimlock function
local function ToggleAimlock()
    Aimlock.Enabled = not Aimlock.Enabled
    
    if Aimlock.Enabled then
        Aimlock.Target = GetTargetUnderCrosshair()
        if Aimlock.Target then
            UI.StatusLabel.Text = "STATUS: LOCKED"
            UI.TargetLabel.Text = "TARGET: "..Aimlock.Target.Name
            ShowNotification("Locked: "..Aimlock.Target.Name)
            if UI.MobileButton then
                UI.MobileButton.BackgroundColor3 = Color3.fromRGB(80, 0, 120)
            end
        else
            Aimlock.Enabled = false
            ShowNotification("No target found")
        end
    else
        UserInputService.MouseBehavior = Enum.MouseBehavior.Default
        if Player.Character and Player.Character:FindFirstChildOfClass("Humanoid") then
            Player.Character:FindFirstChildOfClass("Humanoid").AutoRotate = true
        end
        UI.StatusLabel.Text = "STATUS: READY"
        UI.TargetLabel.Text = "TARGET: NONE"
        ShowNotification("Aimlock disabled")
        if UI.MobileButton then
            UI.MobileButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        end
    end
end

-- Connect controls
if isMobile then
    UI.MobileButton.MouseButton1Click:Connect(ToggleAimlock)
else
    UserInputService.InputBegan:Connect(function(input, processed)
        if input.KeyCode == Aimlock.Hotkey and not processed then
            ToggleAimlock()
        end
    end)
end

UI.CloseButton.MouseButton1Click:Connect(function()
    UI.ScreenGui.Enabled = false
    if isMobile and UI.MobileButton then
        UI.MobileButton.Visible = false
    end
end)

-- Main aimlock loop
RunService.RenderStepped:Connect(function()
    if Aimlock.Enabled then
        if not Aimlock.Target or not Aimlock.Target.Character then
            Aimlock.Target = GetTargetUnderCrosshair()
            if not Aimlock.Target then
                ToggleAimlock() -- Auto-disable if target is lost
                return
            end
        end

        local targetPart = Aimlock.Target.Character:FindFirstChild(Aimlock.LockPart)
        if targetPart then
            -- Force camera lock
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPart.Position)
            UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
            if Player.Character and Player.Character:FindFirstChildOfClass("Humanoid") then
                Player.Character:FindFirstChildOfClass("Humanoid").AutoRotate = false
            end
        end
    end
end)
